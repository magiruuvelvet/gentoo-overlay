diff --git a/driver/cl_options.cpp b/driver/cl_options.cpp
index 125fcd61..beeb036a 100644
--- a/driver/cl_options.cpp
+++ b/driver/cl_options.cpp
@@ -383,7 +383,7 @@ cl::list<std::string>
                    cl::Prefix);
 
 cl::list<std::string>
-    ccSwitches("Xcc", cl::desc("Pass <ccflag> to GCC/Clang for linking"),
+    ccSwitches("Xcc", cl::desc("Pass <ccflag> to Clang for linking"),
                cl::value_desc("ccflag"), cl::cat(linkingCategory));
 
 cl::opt<std::string>
diff --git a/driver/linker-gcc.cpp b/driver/linker-gcc.cpp
index f597d6d2..0b12f754 100644
--- a/driver/linker-gcc.cpp
+++ b/driver/linker-gcc.cpp
@@ -208,7 +208,7 @@ bool ArgsBuilder::isLldDefaultLinker() {
     if (triple->getArch() == llvm::Triple::ArchType::aarch64)
       return true;
   }
-  return false;
+  return true;
 }
 
 //////////////////////////////////////////////////////////////////////////////
@@ -597,13 +597,13 @@ void ArgsBuilder::addLinker() {
     // to each other as required by druntime's rt.sections_android, contrary to
     // gold and lld as of Android NDK r21d).
     if (global.params.targetTriple->getEnvironment() == llvm::Triple::Android) {
-      linker = "bfd";
+      linker = "lld";
     }
     // Otherwise default to ld.gold for Linux due to ld.bfd issues with ThinLTO
     // (see #2278) and older bfd versions stripping llvm.used symbols (e.g.,
     // ModuleInfo refs) with --gc-sections (see #2870).
     else {
-      linker = "gold";
+      linker = "lld";
     }
   }
 
@@ -659,9 +659,7 @@ void ArgsBuilder::addDefaultPlatformLibs() {
       args.push_back("-lm");
       break;
     }
-    if (triple.isMusl() && !global.params.betterC) {
-      args.push_back("-lunwind"); // for druntime backtrace
-    }
+    args.push_back("-lunwind"); // for druntime backtrace
     args.push_back("-lrt");
     args.push_back("-ldl");
   // fallthrough
diff --git a/driver/main.cpp b/driver/main.cpp
index abec31c3..c66a7336 100644
--- a/driver/main.cpp
+++ b/driver/main.cpp
@@ -780,7 +780,8 @@ void registerPredefinedTargetVersions() {
       VersionCondition::addPredefinedGlobalIdent("CRuntime_UClibc");
     } else {
       VersionCondition::addPredefinedGlobalIdent("CRuntime_Glibc");
-      VersionCondition::addPredefinedGlobalIdent("CppRuntime_Gcc");
+      VersionCondition::addPredefinedGlobalIdent("CppRuntime_Clang");
+      VersionCondition::addPredefinedGlobalIdent("DRuntime_Use_Libunwind");
     }
     break;
   case llvm::Triple::Haiku:
diff --git a/driver/tool.cpp b/driver/tool.cpp
index 742c952c..e4e29465 100644
--- a/driver/tool.cpp
+++ b/driver/tool.cpp
@@ -29,15 +29,15 @@
 namespace opts {
 llvm::cl::opt<std::string> linker(
     "linker", llvm::cl::ZeroOrMore,
-    llvm::cl::value_desc("lld-link|lld|gold|bfd|..."),
+    llvm::cl::value_desc("lld-link|lld|..."),
     llvm::cl::desc("Set the linker to use. When explicitly set to '' "
                    "(nothing), prevents LDC from passing `-fuse-ld` to `cc`."),
     llvm::cl::cat(opts::linkingCategory));
 }
 
 static llvm::cl::opt<std::string>
-    gcc("gcc", llvm::cl::ZeroOrMore, llvm::cl::cat(opts::linkingCategory),
-        llvm::cl::value_desc("gcc|clang|..."),
+    gcc("clang", llvm::cl::ZeroOrMore, llvm::cl::cat(opts::linkingCategory),
+        llvm::cl::value_desc("clang|..."),
         llvm::cl::desc(
             "C compiler to use for linking (and external assembling). Defaults "
             "to the CC environment variable if set, otherwise to `cc`."));
