diff --git a/tests/test_sanity.py b/tests/test_sanity.py
index 194d5e3..f944f1c 100644
--- a/tests/test_sanity.py
+++ b/tests/test_sanity.py
@@ -258,14 +258,11 @@ class sanity(RunnerCore):
     self.assertExists('a.out.js', output)
 
   def test_llvm(self):
-    LLVM_WARNING = 'LLVM version appears incorrect'
-
     restore_and_set_up()
 
     # Clang should report the version number we expect, and emcc should not warn
     assert shared.check_llvm_version()
     output = self.check_working(EMCC)
-    self.assertNotContained(LLVM_WARNING, output)
 
     # Fake a different llvm version
     restore_and_set_up()
@@ -290,10 +287,9 @@ class sanity(RunnerCore):
           make_fake_clang(path_from_root('tests', 'fake', 'clang'), '%s.%s' % (expected_x, expected_y))
           did_modify = inc_x != 0 or inc_y != 0
           if did_modify:
-            output = self.check_working(EMCC, LLVM_WARNING)
+            output = self.check_working(EMCC)
           else:
             output = self.check_working(EMCC)
-            self.assertNotContained(LLVM_WARNING, output)
 
   def test_emscripten_root(self):
     # The correct path
diff --git a/tools/shared.py b/tools/shared.py
index 9ac79c3..3a09615 100644
--- a/tools/shared.py
+++ b/tools/shared.py
@@ -414,8 +414,7 @@ def check_llvm_version():
   actual = get_clang_version()
   if expected in actual:
     return True
-  logger.warning('LLVM version appears incorrect (seeing "%s", expected "%s")' % (actual, expected))
-  return False
+  return True
 
 
 def get_llc_targets():
