diff --git a/tools/building.py b/tools/building.py
index 38c26e4..4b0e840 100644
--- a/tools/building.py
+++ b/tools/building.py
@@ -616,11 +616,6 @@ def link_lld(args, target, external_symbol_list=None):
   for a in llvm_backend_args():
     cmd += ['-mllvm', a]
 
-  # LLVM has turned on the new pass manager by default, but it causes some code
-  # size regressions. For now, use the legacy one.
-  # https://github.com/emscripten-core/emscripten/issues/13427
-  cmd += ['--lto-legacy-pass-manager']
-
   # For relocatable output (generating an object file) we don't pass any of the
   # normal linker flags that are used when building and exectuable
   if '--relocatable' not in args and '-r' not in args:
diff --git a/tools/shared.py b/tools/shared.py
index 64c013f..af10680 100644
--- a/tools/shared.py
+++ b/tools/shared.py
@@ -530,11 +530,6 @@ def get_cflags(user_args):
              '-D__unix',
              '-D__unix__']
 
-  # LLVM has turned on the new pass manager by default, but it causes some code
-  # size regressions. For now, use the legacy one.
-  # https://github.com/emscripten-core/emscripten/issues/13427
-  c_opts += ['-flegacy-pass-manager']
-
   # Changes to default clang behavior
 
   # Implicit functions can cause horribly confusing function pointer type errors, see #2175
