diff --git a/AdminLTE-5.1.1/scripts/pi-hole/php/debug.php b/AdminLTE-5.1.1/scripts/pi-hole/php/debug.php
index 27a2354..26c740a 100644
--- a/AdminLTE-5.1.1/scripts/pi-hole/php/debug.php
+++ b/AdminLTE-5.1.1/scripts/pi-hole/php/debug.php
@@ -28,11 +28,11 @@ function echoEvent($datatext) {
 
 if(isset($_GET["upload"]))
 {
-	$proc = popen("sudo pihole -d -a -w", "r");
+	$proc = popen("doas pihole -d -a -w", "r");
 }
 else
 {
-	$proc = popen("sudo pihole -d -w", "r");
+	$proc = popen("doas pihole -d -w", "r");
 }
 while (!feof($proc)) {
     echoEvent(fread($proc, 4096));
diff --git a/AdminLTE-5.1.1/scripts/pi-hole/php/func.php b/AdminLTE-5.1.1/scripts/pi-hole/php/func.php
index 360b3f0..1e14269 100644
--- a/AdminLTE-5.1.1/scripts/pi-hole/php/func.php
+++ b/AdminLTE-5.1.1/scripts/pi-hole/php/func.php
@@ -61,7 +61,7 @@ if(!function_exists('hash_equals')) {
  *
  * would execute command
  *
- *   sudo pihole -h
+ *   doas pihole -h
  *
  * and returns output of that command as a string.
  *
@@ -72,7 +72,7 @@ function pihole_execute($argument_string, $error_on_failure = true) {
     $escaped = escapeshellcmd($argument_string);
     $output = null;
     $return_status = -1;
-    $command = "sudo /usr/bin/pihole " . $escaped;
+    $command = "doas /usr/bin/pihole " . $escaped;
     exec($command, $output, $return_status);
     if($return_status !== 0)
     {
diff --git a/AdminLTE-5.1.1/scripts/pi-hole/php/gravity.sh.php b/AdminLTE-5.1.1/scripts/pi-hole/php/gravity.sh.php
index 4504e6e..891f9ca 100644
--- a/AdminLTE-5.1.1/scripts/pi-hole/php/gravity.sh.php
+++ b/AdminLTE-5.1.1/scripts/pi-hole/php/gravity.sh.php
@@ -30,7 +30,7 @@ function echoEvent($datatext) {
     echo "data: ".implode("\ndata: ", explode("\n",$datatext))."\n\n";
 }
 
-$proc = popen("sudo pihole -g", 'r');
+$proc = popen("doas pihole -g", 'r');
 while (!feof($proc)) {
     echoEvent(fread($proc, 4096));
 }
diff --git a/AdminLTE-5.1.1/scripts/pi-hole/php/loginpage.php b/AdminLTE-5.1.1/scripts/pi-hole/php/loginpage.php
index 2024c17..9e27876 100644
--- a/AdminLTE-5.1.1/scripts/pi-hole/php/loginpage.php
+++ b/AdminLTE-5.1.1/scripts/pi-hole/php/loginpage.php
@@ -65,7 +65,7 @@
                 After installing Pi-hole for the first time, a password is generated and displayed to the user. The
                 password cannot be retrieved later on, but it is possible to set a new password (or explicitly disable
                 the password by setting an empty password) using the command
-                <pre>sudo pihole -a -p</pre>
+                <pre>doas pihole -a -p</pre>
               </div>
             </div>
           </div>
diff --git a/AdminLTE-5.1.1/scripts/pi-hole/php/queryads.php b/AdminLTE-5.1.1/scripts/pi-hole/php/queryads.php
index f247c87..b82dd17 100644
--- a/AdminLTE-5.1.1/scripts/pi-hole/php/queryads.php
+++ b/AdminLTE-5.1.1/scripts/pi-hole/php/queryads.php
@@ -61,7 +61,7 @@ else
     $exact = "";
 }
 
-$proc = popen("sudo pihole -q -adlist ".$url." ".$exact, 'r');
+$proc = popen("doas pihole -q -adlist ".$url." ".$exact, 'r');
 while (!feof($proc)) {
     echoEvent(fread($proc, 4096));
 }
diff --git a/AdminLTE-5.1.1/scripts/pi-hole/php/savesettings.php b/AdminLTE-5.1.1/scripts/pi-hole/php/savesettings.php
index af95c90..500617a 100644
--- a/AdminLTE-5.1.1/scripts/pi-hole/php/savesettings.php
+++ b/AdminLTE-5.1.1/scripts/pi-hole/php/savesettings.php
@@ -575,7 +575,7 @@ function addStaticDHCPLease($mac, $ip, $hostname) {
 				{
 					global $available_themes;
 					if(array_key_exists($_POST["webtheme"], $available_themes))
-						exec('sudo pihole -a theme '.$_POST["webtheme"]);
+						exec('doas pihole -a theme '.$_POST["webtheme"]);
 				}
 				$success .= "The webUI settings have been updated";
 				break;
diff --git a/pi-hole-5.1.2/advanced/Scripts/chronometer.sh b/pi-hole-5.1.2/advanced/Scripts/chronometer.sh
index 98f43c3..efc6e85 100755
--- a/pi-hole-5.1.2/advanced/Scripts/chronometer.sh
+++ b/pi-hole-5.1.2/advanced/Scripts/chronometer.sh
@@ -151,7 +151,7 @@ get_init_stats() {
         local sys_throttle_raw
         local sys_rev_raw
 
-        sys_throttle_raw=$(vgt=$(sudo vcgencmd get_throttled); echo "${vgt##*x}")
+        sys_throttle_raw=$(vgt=$(doas vcgencmd get_throttled); echo "${vgt##*x}")
 
         # Active Throttle Notice: https://bit.ly/2gnunOo
         if [[ "$sys_throttle_raw" != "0" ]]; then
diff --git a/pi-hole-5.1.2/advanced/Scripts/piholeLogFlush.sh b/pi-hole-5.1.2/advanced/Scripts/piholeLogFlush.sh
index c4f037d..e24c9b3 100755
--- a/pi-hole-5.1.2/advanced/Scripts/piholeLogFlush.sh
+++ b/pi-hole-5.1.2/advanced/Scripts/piholeLogFlush.sh
@@ -61,7 +61,7 @@ else
     deleted=$(sqlite3 "${DBFILE}" "DELETE FROM queries WHERE timestamp >= strftime('%s','now')-86400; select changes() from queries limit 1")
 
     # Restart pihole-FTL to force reloading history
-    sudo pihole restartdns
+    doas pihole restartdns
 fi
 
 if [[ "$@" != *"quiet"* ]]; then
diff --git a/pi-hole-5.1.2/advanced/Scripts/webpage.sh b/pi-hole-5.1.2/advanced/Scripts/webpage.sh
index e628a3c..9acbfd6 100755
--- a/pi-hole-5.1.2/advanced/Scripts/webpage.sh
+++ b/pi-hole-5.1.2/advanced/Scripts/webpage.sh
@@ -99,13 +99,13 @@ HashPassword() {
 }
 
 SetWebPassword() {
-    if [ "${SUDO_USER}" == "www-data" ]; then
+    if [ "${DOAS_USER}" == "www-data" ]; then
         echo "Security measure: user www-data is not allowed to change webUI password!"
         echo "Exiting"
         exit 1
     fi
 
-    if [ "${SUDO_USER}" == "lighttpd" ]; then
+    if [ "${DOAS_USER}" == "lighttpd" ]; then
         echo "Security measure: user lighttpd is not allowed to change webUI password!"
         echo "Exiting"
         exit 1
diff --git a/pi-hole-5.1.2/pihole b/pi-hole-5.1.2/pihole
index ec50816..1b3ae37 100755
--- a/pi-hole-5.1.2/pihole
+++ b/pi-hole-5.1.2/pihole
@@ -357,11 +357,11 @@ esac
 
 # Must be root to use this tool
 if [[ ! $EUID -eq 0 ]];then
-  if [[ -x "$(command -v sudo)" ]]; then
-    exec sudo bash "$0" "$@"
+  if [[ -x "$(command -v doas)" ]]; then
+    exec doas bash "$0" "$@"
     exit $?
   else
-    echo -e "  ${CROSS} sudo is needed to run pihole commands.  Please run this script as root or install sudo."
+    echo -e "  ${CROSS} doas is needed to run pihole commands.  Please run this script as root or install doas"
     exit 1
   fi
 fi
