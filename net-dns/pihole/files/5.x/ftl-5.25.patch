diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index cee7b1b..df8e129 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -85,7 +85,7 @@ if(CMAKE_C_COMPILER_VERSION VERSION_EQUAL 8 OR CMAKE_C_COMPILER_VERSION VERSION_
 else()
     set(EXTRAWARN_GCC8 "")
 endif()
-set(EXTRAWARN "-Werror -Waddress -Wlogical-op -Wmissing-field-initializers -Woverlength-strings -Wformat -Wformat-nonliteral -Wuninitialized -Wswitch-enum -Wshadow -Wfloat-equal -Wbad-function-cast -Wwrite-strings -Wparentheses -Wlogical-op -Wstrict-prototypes -Wmissing-prototypes -Wredundant-decls -Winline ${EXTRAWARN_GCC8}")
+set(EXTRAWARN "-Waddress -Wlogical-op -Wmissing-field-initializers -Woverlength-strings -Wformat -Wformat-nonliteral -Wuninitialized -Wswitch-enum -Wshadow -Wfloat-equal -Wbad-function-cast -Wwrite-strings -Wparentheses -Wlogical-op -Wstrict-prototypes -Wmissing-prototypes -Wredundant-decls -Winline ${EXTRAWARN_GCC8}")
 separate_arguments(EXTRAWARN)
 
 # Do we want to compile a statically linked musl executable?
@@ -193,10 +193,10 @@ set(THREADS_PREFER_PTHREAD_FLAG TRUE)
 find_package(Threads REQUIRED)
 
 # for DNSSEC we need the nettle (+ hogweed) crypto and the gmp math libraries
-find_library(LIBHOGWEED NAMES libhogweed${CMAKE_STATIC_LIBRARY_SUFFIX} hogweed)
-find_library(LIBGMP NAMES libgmp${CMAKE_STATIC_LIBRARY_SUFFIX} gmp)
-find_library(LIBNETTLE NAMES libnettle${CMAKE_STATIC_LIBRARY_SUFFIX} nettle)
-find_library(LIBIDN NAMES libidn${CMAKE_STATIC_LIBRARY_SUFFIX} idn)
+find_library(LIBHOGWEED NAMES libhogweed${CMAKE_SHARED_LIBRARY_SUFFIX} hogweed)
+find_library(LIBGMP NAMES libgmp${CMAKE_SHARED_LIBRARY_SUFFIX} gmp)
+find_library(LIBNETTLE NAMES libnettle${CMAKE_SHARED_LIBRARY_SUFFIX} nettle)
+find_library(LIBIDN NAMES libidn${CMAKE_SHARED_LIBRARY_SUFFIX} idn)
 
 target_link_libraries(pihole-FTL rt Threads::Threads ${LIBHOGWEED} ${LIBGMP} ${LIBNETTLE} ${LIBIDN})
 
diff --git a/src/version.h.in b/src/version.h.in
index e9cd74f..65c2123 100644
--- a/src/version.h.in
+++ b/src/version.h.in
@@ -1,11 +1,11 @@
 #ifndef VERSION_H
 #define VERSION_H
 
-#define GIT_VERSION "@GIT_VERSION@"
-#define GIT_DATE "@GIT_DATE@"
-#define GIT_BRANCH "@GIT_BRANCH@"
-#define GIT_TAG "@GIT_TAG@"
-#define GIT_HASH "@GIT_HASH@"
+#define GIT_VERSION "5.25"
+#define GIT_DATE "2024-02-15"
+#define GIT_BRANCH "master"
+#define GIT_TAG "5.25"
+#define GIT_HASH "builtfromreleasetarball"
 #define FTL_ARCH "@FTL_ARCH@"
 #define FTL_CC "@FTL_CC@"
 
