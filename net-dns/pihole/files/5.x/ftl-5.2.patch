diff -uprN FTL-5.2/src/CMakeLists.txt FTL-5.2.cust/src/CMakeLists.txt
--- FTL-5.2/src/CMakeLists.txt	2020-08-09 23:09:43.000000000 +0200
+++ FTL-5.2.cust/src/CMakeLists.txt	2020-08-12 09:36:39.205345710 +0200
@@ -174,10 +174,10 @@ set(CMAKE_THREAD_PREFER_PTHREAD TRUE)
 set(THREADS_PREFER_PTHREAD_FLAG TRUE)
 find_package(Threads REQUIRED)
 
-find_library(HOGWEED libhogweed${CMAKE_STATIC_LIBRARY_SUFFIX})
-find_library(GMP libgmp${CMAKE_STATIC_LIBRARY_SUFFIX})
-find_library(NETTLE libnettle${CMAKE_STATIC_LIBRARY_SUFFIX})
-find_library(IDN libidn${CMAKE_STATIC_LIBRARY_SUFFIX})
+find_library(HOGWEED libhogweed${CMAKE_SHARED_LIBRARY_SUFFIX})
+find_library(GMP libgmp${CMAKE_SHARED_LIBRARY_SUFFIX})
+find_library(NETTLE libnettle${CMAKE_SHARED_LIBRARY_SUFFIX})
+find_library(IDN libidn${CMAKE_SHARED_LIBRARY_SUFFIX})
 
 # for FTL we need the pthread library
 # for dnsmasq we need the nettle crypto library and the gmp maths library
diff -uprN FTL-5.2/src/version.h.in FTL-5.2.cust/src/version.h.in
--- FTL-5.2/src/version.h.in	2020-08-09 23:09:43.000000000 +0200
+++ FTL-5.2.cust/src/version.h.in	2020-08-12 09:36:39.204345713 +0200
@@ -1,11 +1,11 @@
 #ifndef VERSION_H
 #define VERSION_H
 
-#define GIT_VERSION "@GIT_VERSION@"
-#define GIT_DATE "@GIT_DATE@"
-#define GIT_BRANCH "@GIT_BRANCH@"
-#define GIT_TAG "@GIT_TAG@"
-#define GIT_HASH "@GIT_HASH@"
+#define GIT_VERSION "5.2"
+#define GIT_DATE "2020-08-12"
+#define GIT_BRANCH "master"
+#define GIT_TAG "5.2"
+#define GIT_HASH "builtfromreleasetarball"
 #define FTL_ARCH "@FTL_ARCH@"
 #define FTL_CC "@FTL_CC@"
 
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 452dd56..61e4456 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -80,7 +80,7 @@ if(CMAKE_C_COMPILER_VERSION VERSION_EQUAL 8 OR CMAKE_C_COMPILER_VERSION VERSION_
 else()
     set(EXTRAWARN_GCC8 "")
 endif()
-set(EXTRAWARN "-Werror -Waddress -Wlogical-op -Wmissing-field-initializers -Woverlength-strings -Wformat -Wformat-nonliteral -Wuninitialized -Wswitch-enum -Wshadow -Wfloat-equal -Wbad-function-cast -Wwrite-strings -Wparentheses -Wlogical-op -Wstrict-prototypes -Wmissing-prototypes -Wredundant-decls -Winline ${EXTRAWARN_GCC8}")
+set(EXTRAWARN "-Waddress -Wlogical-op -Wmissing-field-initializers -Woverlength-strings -Wformat -Wformat-nonliteral -Wuninitialized -Wswitch-enum -Wshadow -Wfloat-equal -Wbad-function-cast -Wwrite-strings -Wparentheses -Wlogical-op -Wstrict-prototypes -Wmissing-prototypes -Wredundant-decls -Winline ${EXTRAWARN_GCC8}")
 separate_arguments(EXTRAWARN)
 
 # Do we want to compile a statically linked musl executable?
