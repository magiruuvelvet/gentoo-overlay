diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 1a99581..62a28ba 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -87,14 +87,9 @@ message(STATUS "HAVE_KDecoration3_5_25: ${HAVE_KDecoration3_5_25} (${KDecoration
 configure_file(BuildConfig.h.cmake ${CMAKE_CURRENT_BINARY_DIR}/BuildConfig.h)
 
 set (decoration_SRCS
-    AppMenuModel.cc
-    AppMenuButton.cc
-    AppMenuButtonGroup.cc
     BoxShadowHelper.cc
     Button.cc
     Decoration.cc
-    MenuOverflowButton.cc
-    TextButton.cc
     plugin.cc
 )
 
diff --git a/src/Decoration.cc b/src/Decoration.cc
index f110aab..171db98 100644
--- a/src/Decoration.cc
+++ b/src/Decoration.cc
@@ -22,7 +22,6 @@
 #include "Decoration.h"
 #include "Material.h"
 #include "BuildConfig.h"
-#include "AppMenuButtonGroup.h"
 #include "BoxShadowHelper.h"
 #include "Button.h"
 #include "InternalSettings.h"
@@ -233,16 +232,6 @@ bool Decoration::init()
         this,
         &Button::create);
 
-    m_menuButtons = new AppMenuButtonGroup(this);
-    connect(m_menuButtons, &AppMenuButtonGroup::menuUpdated,
-            this, &Decoration::updateButtonsGeometry);
-    connect(m_menuButtons, &AppMenuButtonGroup::opacityChanged,
-            this, repaintTitleBar);
-    connect(m_menuButtons, &AppMenuButtonGroup::alwaysShowChanged,
-            this, repaintTitleBar);
-    m_menuButtons->updateAppMenuModel();
-
-
     connect(decoratedClient, &KDecoration3::DecoratedWindow::widthChanged,
             this, &Decoration::updateTitleBar);
     connect(decoratedClient, &KDecoration3::DecoratedWindow::widthChanged,
@@ -300,7 +289,6 @@ void Decoration::reconfigure()
 
     updateBorders();
     updateTitleBar();
-    m_menuButtons->setAlwaysShow(m_internalSettings->menuAlwaysShow());
     updateButtonsGeometry();
     updateButtonAnimation();
     updateShadow();
@@ -311,20 +299,6 @@ void Decoration::mousePressEvent(QMouseEvent *event)
 {
     KDecoration3::Decoration::mousePressEvent(event);
     // qCDebug(category) << "Decoration::mousePressEvent" << event;
-
-    if (m_menuButtons->geometry().contains(event->pos())) {
-        if (event->button() == Qt::LeftButton) {
-            initDragMove(event->pos());
-            event->setAccepted(false);
-
-        // If AppMenuButton's do not handle the button
-        } else if (event->button() == Qt::MiddleButton || event->button() == Qt::RightButton) {
-            // Don't accept the event. KDecoration3 will
-            // accept the event even if it doesn't pass
-            // button->acceptableButtons()->testFlag(button)
-            event->setAccepted(false);
-        }
-    }
 }
 
 void Decoration::hoverEnterEvent(QHoverEvent *event)
@@ -340,12 +314,6 @@ void Decoration::hoverMoveEvent(QHoverEvent *event)
     KDecoration3::Decoration::hoverMoveEvent(event);
     // qCDebug(category) << "Decoration::hoverMoveEvent" << event;
 
-    const bool dragStarted = dragMoveTick(event->position().toPoint());
-    // qCDebug(category) << "    " << "dragStarted" << dragStarted;
-    if (dragStarted) {
-        m_menuButtons->unPressAllButtons();
-    }
-
     // const bool wasHovered = m_menuButtons->hovered();
     // const bool contains = m_menuButtons->geometry().contains(event->posF());
     // if (!wasHovered && contains) {
@@ -381,17 +349,6 @@ void Decoration::hoverLeaveEvent(QHoverEvent *event)
 
 void Decoration::wheelEvent(QWheelEvent *event)
 {
-    #if QT_VERSION >= QT_VERSION_CHECK(5, 14, 0)
-    const QPointF pos = event->position();
-    #else
-    const QPointF pos = event->posF();
-    #endif
-
-    if (m_menuButtons->geometry().contains(pos)) {
-        // Skip
-    } else {
-        KDecoration3::Decoration::wheelEvent(event);
-    }
 }
 
 void Decoration::onSectionUnderMouseChanged(const Qt::WindowFrameSection value)
@@ -439,17 +396,6 @@ void Decoration::updateTitleBar()
 
 void Decoration::updateTitleBarHoverState()
 {
-    const bool wasHovered = m_menuButtons->hovered();
-    const bool isHovered = titleBarIsHovered();
-    if (!wasHovered && isHovered) {
-        // HoverEnter
-        m_menuButtons->setHovered(true);
-    } else if (wasHovered && !isHovered) {
-        // HoverLeave
-        m_menuButtons->setHovered(false);
-    } else if (wasHovered && isHovered) {
-        // HoverMove
-    }
 }
 
 void Decoration::setButtonGroupHeight(KDecoration3::DecorationButtonGroup *buttonGroup, int buttonHeight)
@@ -492,7 +438,6 @@ void Decoration::updateButtonHeight()
     const int buttonHeight = titleBarHeight();
     setButtonGroupHeight(m_leftButtons, buttonHeight);
     setButtonGroupHeight(m_rightButtons, buttonHeight);
-    setButtonGroupHeight(m_menuButtons, buttonHeight);
 }
 
 void Decoration::updateButtonsGeometry()
@@ -522,21 +467,6 @@ void Decoration::updateButtonsGeometry()
     //     lastButton->padding()->setRight(rightOffset);
     // }
 
-    // Menu
-    if (!m_menuButtons->buttons().isEmpty()) {
-        const int captionOffset = captionMinWidth() + settings()->smallSpacing();
-        const QRect availableRect = centerRect().adjusted(
-            0,
-            0,
-            -captionOffset,
-            0
-        );
-        setButtonGroupHorzPadding(m_menuButtons, m_internalSettings->menuButtonHorzPadding());
-        m_menuButtons->setPos(availableRect.topLeft());
-        m_menuButtons->setSpacing(0);
-        m_menuButtons->updateOverflow(availableRect);
-    }
-
     update();
 }
 
@@ -555,11 +485,6 @@ void Decoration::updateButtonAnimation()
     const int duration = animationsDuration();
     setButtonGroupAnimation(m_leftButtons, enabled, duration);
     setButtonGroupAnimation(m_rightButtons, enabled, duration);
-    setButtonGroupAnimation(m_menuButtons, enabled, duration);
-
-    // Hover Animation
-    m_menuButtons->setAnimationEnabled(enabled);
-    m_menuButtons->setAnimationDuration(duration);
 }
 
 void Decoration::updateShadow()
@@ -1031,12 +956,8 @@ void Decoration::paintCaption(QPainter *painter, const QRectF &repaintRegion) co
     const int textWidth = settings()->fontMetrics().boundingRect(decoratedClient->caption()).width();
     const QRect textRect((size().width() - textWidth) / 2, 0, textWidth, titleBarHeight());
 
-    const bool appMenuVisible = !m_menuButtons->buttons().isEmpty();
-    const int menuButtonsWidth = m_menuButtons->geometry().width()
-        + (appMenuVisible ? appMenuCaptionSpacing() : 0);
-
     const QRect availableRect = centerRect().adjusted(
-        (m_menuButtons->alwaysShow() ? menuButtonsWidth : 0),
+        0,
         0,
         0,
         0
@@ -1082,38 +1003,7 @@ void Decoration::paintCaption(QPainter *painter, const QRectF &repaintRegion) co
     painter->save();
     painter->setFont(settings()->font());
 
-    if (m_menuButtons->buttons().isEmpty()) {
-        painter->setPen(titleBarForegroundColor());
-    } else { // menuButtons is visible
-        const int menuRight = m_menuButtons->geometry().right();
-        const int textLeft = textRect.left();
-        const int textRight = textRect.right();
-        // qCDebug(category) << "textLeft" << textLeft << "menuRight" << menuRight;
-
-        if (!m_menuButtons->alwaysShow()) { // caption fades away revealing menu
-            painter->setOpacity(1.0 - m_menuButtons->opacity());
-            painter->setPen(titleBarForegroundColor());
-        } else if (m_menuButtons->overflowing()) { // hide caption leaving "whitespace" to easily grab.
-            painter->setPen(Qt::transparent);
-        } else if (textRight < menuRight) { // menuButtons completely coveres caption
-            painter->setPen(Qt::transparent);
-        } else if (textLeft < menuRight) { // menuButtons covers caption
-            const int fadeWidth = 10; // TODO: scale by dpi
-            const int x1 = menuRight;
-            const int x2 = qMin(x1+fadeWidth, textRight);
-            const float x1Ratio = (float)(x1-textLeft) / (float)textWidth;
-            const float x2Ratio = (float)(x2-textLeft) / (float)textWidth;
-            // qCDebug(category) << "    " << "x2" << x2 << "x1R" << x1Ratio << "x2R" << x2Ratio;
-            QLinearGradient gradient(textRect.topLeft(), textRect.bottomRight());
-            gradient.setColorAt(x1Ratio, Qt::transparent);
-            gradient.setColorAt(x2Ratio, titleBarForegroundColor());
-            QBrush brush(gradient);
-            QPen pen(brush, 1);
-            painter->setPen(pen);
-        } else { // caption is not covered by menuButtons
-            painter->setPen(titleBarForegroundColor());
-        }
-    }
+    painter->setPen(titleBarForegroundColor());
 
     painter->drawText(captionRect, alignment, caption);
     painter->restore();
@@ -1123,7 +1013,6 @@ void Decoration::paintButtons(QPainter *painter, const QRectF &repaintRegion) co
 {
     m_leftButtons->paint(painter, repaintRegion);
     m_rightButtons->paint(painter, repaintRegion);
-    m_menuButtons->paint(painter, repaintRegion);
 }
 
 void Decoration::paintOutline(QPainter *painter, const QRectF &repaintRegion) const
diff --git a/src/Decoration.h b/src/Decoration.h
index 5ac25ee..75572ca 100644
--- a/src/Decoration.h
+++ b/src/Decoration.h
@@ -20,7 +20,6 @@
 
 // own
 #include "BuildConfig.h"
-#include "AppMenuButtonGroup.h"
 #include "InternalSettings.h"
 
 // KDecoration
@@ -129,7 +128,6 @@ private:
 
     KDecoration3::DecorationButtonGroup *m_leftButtons;
     KDecoration3::DecorationButtonGroup *m_rightButtons;
-    AppMenuButtonGroup *m_menuButtons;
 
     QSharedPointer<InternalSettings> m_internalSettings;
 
